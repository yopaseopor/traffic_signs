<modelsLibrary>
<!-- 
	
*nodeModel - allow to define models on node.
attributes:
	- matcher 	- selector for way (JOSM search format)
	- model 	- location of model (obj format supported), it is relatively from plugin directory!
	- translate - translation of model in MODEL SPACE
	- scale 	- function for model scale, it can be normalized WORLD SPACE
	- modelParameter - see in wayNodeModel

* wayNodeModel - allow to define models on way nodes. This models have way context like direction.
attributes: 
	- matcher 	- selector for way (JOSM search format)
	- filter 	- filter for selected way nodes (JOSM search format)
	- model 	- location of model (obj format supported), it is relatively from plugin directory!
	- translate - translation of model in MODEL SPACE
	- scale 	- function for model scale, it can be normalized WORLD SPACE
	- direction - function for direction of model WORLD SPACE
	- offset 	- model offset from way
	- modelParameter - allow to parameterize some model attributes currently it is possible to change material texture. Parameters:
		material.{material_name}.texture0={texture_name} - allow to change model material texture

	Functions
Functions depends on context! Currently validation for them maybe not working!

* scale - scale functions:
OLD	- scaleHeight(a,default)
OLD	- normalHeight(a, default)
OLD	- number

	- height({default}) 	- receive height from OsmPrivitive tags, if tag height is not set it return default value 
	- {number}				- receive double value
	
Example:
	0.8 * height(5)	

	
* direction
	- wayNodeDirection() 	- for nodes located on ways it read way direction (orthogonal to bisector in this point)
		
Example:
	90 + wayNodeDirection()	
	
* vector
	- vector() 				- create 3d vector (0, 0, 0)
	- vector({x}, {y}, {z}) - create 3d vector ({x}, {y}, {z}) <- XXX currently not working 
	- vectorX({x}) 			- create 3d vector ({x}, 0, 0) 
	- vectorY({y}) 			- create 3d vector (0, {y}, 0) 
	- vectorZ({z})			- create 3d vector (0, 0, {z}) 
 -->
	<nodeModel matcher="(power_source=wind)" model="/models/cc/fullTurbine_v3.blend/fullTurbine_v3.obj"
		translateX="0" translateY="65" translateZ="0" scale="0.154" />
	<nodeModel matcher="(power_source=wind2)" model="/models/cc/fullTurbine_v3.blend/fullTurbine_v3.obj"
		translateX="0" translateY="65" translateZ="0" scale="height(20)" />
	<nodeModel matcher="(power_source=wind4)" model="/models/cc/fullTurbine_v3.blend/fullTurbine_v3.obj"
		translateX="0" translateY="65" translateZ="0" scale="0.8 * height(20)" />
	
	<nodeModel matcher="(emergency=fire_hydrant)" model="/models/pd/fire_hydrant.obj"
		translateX="0" translateY="0" translateZ="0" scale="height(1)" />
		
	<nodeModel matcher="tomb=*" model="/models/cc/tombstone/tombstone_stone.obj"
		translateX="0" translateY="0" translateZ="0" scale="height(0.8)" direction="90"/>
		
	<nodeModel matcher="highway=street_lamp" model="/models/pd/lamp.obj"
		translateX="0" translateY="0" translateZ="0" scale="height(5.5)" direction="0"/>
	
	<nodeModel matcher="highway=street_lamp1" model="/models/pd/StreetlampM2_Height323cm.obj"
		translateX="0" translateY="0" translateZ="0" scale="height(5.5)" direction="0"/>
	
	
	
	<nodeModel matcher="amenity=bench" model="/models/pd/bench.obj"
		translateX="0" translateY="0" translateZ="0" scale="height(1.2)" direction="0"/>
		
	<nodeModel matcher="amenity=waste_basket" model="/models/pd/waste_basket.obj"
		translateX="0" translateY="0" translateZ="0" scale="height(0.6)" direction="0"/>
		
	<nodeModel matcher="amenity=post_box" model="/models/pd/post_box.obj"
		translateX="0" translateY="0" translateZ="0" scale="height(1.1)" direction="0"/>
		
	<nodeModel matcher="highway=milestone" model="/models/pd/milestone.obj"
		translateX="0" translateY="0" translateZ="0" scale="height(1)" direction="0"/>


	
	<!-- Example only -->
	<nodeModel matcher="test=tree1" model="/models/pd/tree1/christian_nietsche_tree.obj"
		translateX="0" translateY="0" translateZ="0" scale="height(7)" direction="0"/>
	<nodeModel matcher="test=tree2" model="/models/pd/new_tree_lod_packed/New_Tree_Lod_Packed.obj"
		translateX="0" translateY="0" translateZ="0" scale="height(7)" direction="0"/>
	<wayNodeModel matcher="highway=*" filter="hightway=bench" 
		model="/models/pd/bench.obj"
		translate="vector()" scale="height(1)" direction="wayNodeDirection() + 90" offset="3" />

	
	
	<nodeModel matcher="test=sign2" model="/models/traffic_signs/test/triangleSign.obj"
		modelParameter="material.mat_sign.texture0=tree.png"
		translateX="0" translateY="0" translateZ="0" scale="height(7)" direction="0"/>
	
	
	 
</modelsLibrary> 